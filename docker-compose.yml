services:
  # ————————————————————————————————
  # 1. InfluxDB to collect metrics
  influxdb:
    image: influxdb:1.8
    container_name: influxdb
    networks:
      - mynetwork
    ports:
      - "8086:8086"
    volumes:
      - influxdb-data:/var/lib/influxdb
    environment:
      INFLUXDB_DB: k6
      INFLUXDB_HTTP_AUTH_ENABLED: "false"
    healthcheck:
      test: ["CMD", "influx", "-execute", "SHOW DATABASES"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ————————————————————————————————
  # 2. Grafana to visualize
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    networks:
      - mynetwork
    ports:
      - "3002:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin
      GF_USERS_ALLOW_SIGN_UP: "false"
    depends_on:
      influxdb:
        condition: service_healthy

  # ————————————————————————————————
  # 3. Your Node.js application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: node-app
    networks:
      - mynetwork
    ports:
      - "3001:3001"
    environment:
      NODE_ENV: production
    depends_on:
      - influxdb

  # ————————————————————————————————
  # 4. k6 load-testing service
  k6:
    image: grafana/k6
    container_name: k6
    networks:
      - mynetwork
    volumes:
      - ./scripts:/scripts:ro
      - ./load-test-results:/load-test-results
    environment:
      K6_INFLUXDB_URL: http://influxdb:8086/write?db=k6
    depends_on:
      influxdb:
        condition: service_healthy
    command: >
      run /scripts/test.js
       --out influxdb=http://influxdb:8086/k6
       --summary-export=/load-test-results/summary.json

volumes:
  influxdb-data:
  grafana-data:

networks:
  mynetwork: